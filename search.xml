<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>hello-text</title>
      <link href="/lizeyu66.github.io/2020/07/31/hello-text/"/>
      <url>/lizeyu66.github.io/2020/07/31/hello-text/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>indexedDB使用方法</title>
      <link href="/lizeyu66.github.io/2020/07/31/about/"/>
      <url>/lizeyu66.github.io/2020/07/31/about/</url>
      
        <content type="html"><![CDATA[<h2 id="打开数据库-新建数据库"><a href="#打开数据库-新建数据库" class="headerlink" title="打开数据库/新建数据库"></a>打开数据库/新建数据库</h2><p><strong>indexedDB.open(dbName, version)</strong></p><ul><li>参数1：数据库名称（如果数据库不存在，则会新建）</li><li>参数2: 数据库版本（若省略，则默认为当前版本，新建数据库时，默认为1）</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">let routerDBRequest &#x3D; window.indexedDB.open([dataBaseName])</span><br><span class="line">&lt;!-- error 表示数据库打开失败 --&gt;</span><br><span class="line">routerDBRequest.onerror &#x3D; (event) &#x3D;&gt; &#123;</span><br><span class="line">    console.log(&#39;打开失败&#39;)</span><br><span class="line">&#125;</span><br><span class="line">&lt;!-- success 表示数据库打开成功 --&gt;</span><br><span class="line">routerDBRequest.onsuccess &#x3D; (event) &#x3D;&gt; &#123;</span><br><span class="line">    console.log(&#39;打开成功&#39;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="读取数据"><a href="#读取数据" class="headerlink" title="读取数据"></a>读取数据</h2><p><strong>objectStore.get(primaryKey)</strong></p><ul><li>参数：主键的值</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">let routerDBRequest &#x3D; window.indexedDB.open(&#39;dataAnalysis&#39;)</span><br><span class="line">routerDBRequest.onsuccess &#x3D; (event) &#x3D;&gt; &#123;</span><br><span class="line">    db &#x3D; event.target.result</span><br><span class="line">    let trans &#x3D; db.transaction([&#39;allRouteData&#39;])</span><br><span class="line">    let objectStores  &#x3D; trans.objectStore(&#39;allRouteData&#39;)</span><br><span class="line">    let request &#x3D; objectStores.get(1)</span><br><span class="line">    request.onsuccess &#x3D; (event) &#x3D;&gt; &#123;</span><br><span class="line">      if(event.target.result) &#123;</span><br><span class="line">        </span><br><span class="line">      &#125;</span><br><span class="line">        const newRoute &#x3D; []</span><br><span class="line">        newRoute.push(event.target.result)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="test"><a href="#test" class="headerlink" title="test"></a>test</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br></pre></td><td class="code"><pre><span class="line">let routerDBRequest &#x3D; window.indexedDB.open(&#39;dataAnalysis&#39;)</span><br><span class="line">&lt;!-- error 表示数据库打开失败 --&gt;</span><br><span class="line">routerDBRequest.onerror &#x3D; (event) &#x3D;&gt; &#123;</span><br><span class="line">    console.log(&#39;打开失败&#39;)</span><br><span class="line">    console.log(event)</span><br><span class="line">&#125;</span><br><span class="line">&lt;!-- success 表示数据库打开成功 --&gt;</span><br><span class="line">routerDBRequest.onsuccess &#x3D; (event) &#x3D;&gt; &#123;</span><br><span class="line">    console.log(&#39;打开成功&#39;)</span><br><span class="line">    &lt;!-- 读取单条数据 --&gt;</span><br><span class="line">    db &#x3D; event.target.result</span><br><span class="line">    let trans &#x3D; db.transaction([&#39;allRouteData&#39;])</span><br><span class="line">    let objectStores  &#x3D; trans.objectStore(&#39;allRouteData&#39;)</span><br><span class="line">    let request &#x3D; objectStores.get(1)  &#x2F;&#x2F; get参数为主键的值</span><br><span class="line">    request.onsuccess &#x3D; (event) &#x3D;&gt; &#123;</span><br><span class="line">        const newRoute &#x3D; []</span><br><span class="line">        newRoute.push(event.target.result)</span><br><span class="line">        store.dispatch(&#39;dealRouter&#x2F;SaveAllRouter&#39;, newRoute)</span><br><span class="line">        router.push(&#123; path: newRoute[0].path &#125;)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    &lt;!-- 批量读取数据 --&gt;</span><br><span class="line">    objectStores.openCursor().onsuccess &#x3D; (event) &#x3D;&gt; &#123;</span><br><span class="line">        let res &#x3D; event.target.result</span><br><span class="line">        if(res) &#123;</span><br><span class="line">            let val &#x3D; res.value</span><br><span class="line">            newRoute.push(val)</span><br><span class="line">            store.dispatch(&#39;dealRouter&#x2F;SaveAllRouter&#39;, newRoute)</span><br><span class="line">            router.push(&#123; path: newRoute[0].path &#125;)</span><br><span class="line">            res.continue()</span><br><span class="line">        &#125; else &#123;</span><br><span class="line">            console.log(&#39;完成索引&#39;)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    &lt;!-- 修改数据 --&gt;</span><br><span class="line">    let objectStores  &#x3D; db.transaction([&#39;allRouteData&#39;], &#39;readwrite&#39;).objectStore(&#39;allRouteData&#39;)</span><br><span class="line">    const newRoute &#x3D; []</span><br><span class="line">    objectStores.put(&#123;id: 1, name: &#39;首页&#39;, component: &#39;Layout&#39;, path: &#39;&#x2F;&#39;, redirect: &#39;&#x2F;dashboard&#39;, meta:&#39;&#123;&quot;title&quot;:&quot;首页&quot;&#125;&#39;, children: [&#123;</span><br><span class="line">    name: &#39;首页&#39;,</span><br><span class="line">    path: &#39;dashboard&#39;,</span><br><span class="line">    component: &#39;Dashboard&#39;,</span><br><span class="line">    id: 2,</span><br><span class="line">    meta:&#39;&#123;&quot;title&quot;:&quot;首页&quot;&#125;&#39;</span><br><span class="line">    &#125;]&#125;)</span><br><span class="line"></span><br><span class="line">    &lt;!-- 删除数据 --&gt;</span><br><span class="line">    let objectStores  &#x3D; db.transaction([&#39;allRouteData&#39;], &#39;readwrite&#39;).objectStore(&#39;allRouteData&#39;).del(1)</span><br><span class="line">    request.onsuccess &#x3D; (event) &#x3D;&gt; &#123;</span><br><span class="line">        console.log(&#39;数据删除成功&#39;)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;!-- upgradeneeded  数据库升级事件（指定版本大于数据库实际版本时触发） --&gt;</span><br><span class="line">routerDBRequest.onupgradeneeded &#x3D; (event) &#x3D;&gt; &#123;</span><br><span class="line">    let db &#x3D; event.target.result</span><br><span class="line"></span><br><span class="line">    &lt;!-- 创建数据仓库&#x2F;新建表 --&gt;</span><br><span class="line">    &lt;!-- allRouteData为表名,keyPath为主键,使用autoIncrement可以自动生成主键 --&gt;</span><br><span class="line">    if(!db.objectStoreNames.contains(&quot;allRouteData&quot;)) &#123;</span><br><span class="line">        let allRoute &#x3D; this.db.createObjectStore(&quot;allRouteData&quot;, &#123; keyPath: &#39;id&#39;&#125;)</span><br><span class="line">        &lt;!-- IDBObject.createIndex()是新建索引的方法， 三个参数分别为索引名称、索引所在的属性、配置对象（说明该属性是否包含重复的值） --&gt;</span><br><span class="line">        allRoute.createIndex(&#39;id&#39;, &#39;id&#39;, &#123; unique: true &#125;)</span><br><span class="line">        allRoute.createIndex(&#39;name&#39;, &#39;name&#39;, &#123; unique: false &#125;)</span><br><span class="line">        allRoute.createIndex(&#39;path&#39;, &#39;path&#39;, &#123; unique: false &#125;)</span><br><span class="line">        allRoute.createIndex(&#39;component&#39;, &#39;component&#39;, &#123; unique: false &#125;)</span><br><span class="line">        allRoute.createIndex(&#39;hiddenInMenu&#39;, &#39;hiddenInMenu&#39;, &#123; unique: false&#125;)</span><br><span class="line">        allRoute.createIndex(&#39;redirect&#39;, &#39;redirect&#39;, &#123;unique: false&#125;)</span><br><span class="line">        allRoute.createIndex(&#39;meta&#39;, &#39;meta&#39;, &#123; unique: false&#125;)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    &lt;!-- 写入数据 --&gt;</span><br><span class="line">    var objectStore &#x3D; transaction.objectStore(&quot;allRouteData&quot;)</span><br><span class="line">    let addReq &#x3D; objectStore.add($&#123;data&#125;)</span><br><span class="line">    addReq.onsuccess &#x3D; (event)&#x3D;&gt; &#123;</span><br><span class="line">    console.log(&#39;数据写入成功&#39;)</span><br><span class="line">    &#125;</span><br><span class="line">    addReq.onerror &#x3D; (event) &#x3D;&gt; &#123;</span><br><span class="line">    console.log(&#39;数据写入失败&#39;)</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    &lt;!-- 利用索引检索数据 --&gt;</span><br><span class="line">    let objectStores  &#x3D; db.transaction([&#39;allRouteData&#39;], &#39;readwrite&#39;).objectStore(&#39;allRouteData&#39;)</span><br><span class="line">    let index &#x3D; objectStores.index(&quot;name&quot;)</span><br><span class="line">    index.get(&#39;首页&#39;).onsuccess &#x3D; (event)&#x3D;&gt; &#123;</span><br><span class="line">    console.log(event.target.result)</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>post title with whitespace</title>
      <link href="/lizeyu66.github.io/2020/07/31/post-title-with-whitespace/"/>
      <url>/lizeyu66.github.io/2020/07/31/post-title-with-whitespace/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      
        <tags>
            
            <tag> test </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
